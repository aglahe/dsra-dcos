#cloud-config

#
# Changes 
# =======
# 07/08/2014 - Work around given that $private_ipv4 isn't supported when performing bare metal installs.
#              Generates unit drop-in for etc2.service. Generates etcd2 service settings based on machine's
#              IP address. INITIAL_CLUSTER setting is static. Need more dynamic way to launch cluster. - MP
#
write_files:
  - path: /home/core/get_ip.sh
    permissions: 755
    owner: root:root
    content: |
      #!/bin/bash
      PRIV_IP=`ifconfig eno1 | sed -n 2p | awk '{ print $2 }'`
      TARGET_DIR=/run/systemd/system/etcd2.service.d/
      TARGET="$TARGET_DIR/20-settings.conf"
      # DISC_URL=https://discovery.etcd.io/27e443645534ae1b3c746314c48341b6
      HOST=`/usr/bin/hostname`
      mkdir -p $TARGET_DIR

      echo "[Service]" > $TARGET
      echo "Environment=\"ETCD2_NAME=$HOST\"" >> $TARGET
      echo "Environment=\"ETCD2_ADVERTISE_CLIENT_URLS=http://$PRIV_IP:2379\"" >> $TARGET
      echo "Environment=\"ETCD2_INIITIAL_ADVERTISE_PEER_URLS=https://$PRIV_IP:2380\"" >> $TARGET
      echo "Environment=\"ETCD2_LISTEN_CLIENT_URLS=http://$PRIV_IP:2379,http://127.0.0.1:2379\"" >> $TARGET
      echo "Environment=\"ETCD2_LISTEN_PEERS_URLS=http://$PRIV_IP:2380\"" >> $TARGET
      echo "Environment=\"ETCD2_INITIAL_CLUSTER=r105u03=http://10.105.0.3:2380,r105u05=http://10.105.0.5:2380,r105u07=http://10.105.0.7:2380\"" >> $TARGET
      echo "Environment=\"ETCD2_INITIAL_CLUSTER_STATE=new\"" >> $TARGET
      echo "Environment=\"ETCD2_INITIAL_CLUSTER_TOKEN=dsra-cluster\"" >> $TARGET

coreos:
  units:
  - name: config-etcd2.service
    command: start
    content: |
      [Unit]
      Description = Config ETCD2
      Before = etcd2.service
      [Service]
      User=root
      ExecStart=/home/core/get_ip.sh
  - name: etcd2.service
    command: start
  - name: fleet.service
    command: start
  # - name: format-var-lib-docker.service
  #   command: start
  #   content: |
  #     [Unit]
  #     Description=Formats the ephemeral drive
  #     [Service]
  #     Type=oneshot
  #     RemainAfterExit=yes
  #     ExecStart=/usr/sbin/wipefs -f /dev/sda
  #     ExecStart=/usr/sbin/mkfs.btrfs -m single -f /dev/sda
  # - name: format-data.service
  #   command: start
  #   content: |
  #     [Unit]
  #     Description=Formats the data drive
  #     [Service]
  #     Type=oneshot
  #     RemainAfterExit=yes
  #     ExecStart=/usr/sbin/wipefs -f /dev/sdb
  #     ExecStart=/usr/sbin/mkfs.btrfs -m single  -f /dev/sdb
  - name: var-lib-docker.mount
    command: start
    content: |
        [Unit]
        Description=Mount ephemeral to /var/lib/docker
        Before=docker.service
        [Mount]
        What=/dev/sda
        Where=/var/lib/docker
        Type=btrfs
  - name: data.mount
    command: start
    content: |
        [Unit]
        Description=Mount data
        [Mount]
        What=/dev/sdb
        Where=/data
        Type=btrfs
ssh_authorized_keys:
 - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFDeCKt/GYFLig9AViMGsCADyXpt3F/D62m2eJPmxUs4EQAT/R3KKMb34T5JIoTfD/AMMffFO4aiRey1YP9ezkbpCBgA6PSU3DO2E75Kb9Y4P+W0iJetGv0pfr8D1nI0bc1wCF96cvODrGwzpSu2tyHeh2IGNYZc3EiExvXb3GhhZ17sXTW5RfBYqgZiV1SJBCbCajeDP4c4ZAI2mW87nJGWXocvZltSKW/GJlNSzNxz6u4mKsKl8YgF812UGDZwbJdI46vFBQ/LKVd0A3nKhh7zMdZU/kYYc1xgUJGHgXr5LM8UK7EhLeHOwLazQPw2mL3EF6kQn6g8FGmQgdeFrb
